<div id="gjs" style="height:0px; overflow:hidden">
  <div class="panel">
    <h1 class="welcome">Welcome to</h1>
    <div class="big-title">
      <svg class="logo" viewBox="0 0 100 100">
        <path d="M40 5l-12.9 7.4 -12.9 7.4c-1.4 0.8-2.7 2.3-3.7 3.9 -0.9 1.6-1.5 3.5-1.5 5.1v14.9 14.9c0 1.7 0.6 3.5 1.5 5.1 0.9 1.6 2.2 3.1 3.7 3.9l12.9 7.4 12.9 7.4c1.4 0.8 3.3 1.2 5.2 1.2 1.9 0 3.8-0.4 5.2-1.2l12.9-7.4 12.9-7.4c1.4-0.8 2.7-2.2 3.7-3.9 0.9-1.6 1.5-3.5 1.5-5.1v-14.9 -12.7c0-4.6-3.8-6-6.8-4.2l-28 16.2"/>
      </svg>
      <span>GrapesJS</span>
    </div>
    <div class="description">
      This is a demo content from index.html. For the development, you shouldn't edit this file, instead you can
      copy and rename it to _index.html, on next server start the new file will be served, and it will be ignored by git.
    </div>
  </div>
  <style>
    .panel {
      width: 90%;
      max-width: 700px;
      border-radius: 3px;
      padding: 30px 20px;
      margin: 150px auto 0px;
      background-color: #d983a6;
      box-shadow: 0px 3px 10px 0px rgba(0,0,0,0.25);
      color:rgba(255,255,255,0.75);
      font: caption;
      font-weight: 100;
    }

    @media (min-width: 768px) and (max-width: 979px) {
      .panel {
        max-width: 700px;
      }
    }

    .welcome {
      text-align: center;
      font-weight: 100;
      margin: 0px;
    }

    .logo {
      width: 70px;
      height: 70px;
      vertical-align: middle;
    }

    .logo path {
      pointer-events: none;
      fill: none;
      stroke-linecap: round;
      stroke-width: 7;
      stroke: #fff
    }

    .big-title {
      text-align: center;
      font-size: 3.5rem;
      margin: 15px 0;
    }

    .description {
      text-align: justify;
      font-size: 1rem;
      line-height: 1.5rem;
    }
  </style>
</div>

{% render 'grapesjs/my-plugin.liquid' %}
{% render 'grapesjs/table-plugin.liquid' %}
{% render 'grapesjs/edit-css-plugin.liquid' %}
{% render 'grapesjs/edit-html-plugin.liquid' %}

<script type="text/javascript">
{% render 'grapesjs/styleManagerCfg.js.liquid' %}
  var editor = grapesjs.init({
    height: '100%',
    forceClass: true,
    showOffsets: 1,
    noticeOnUnload: 0,
    storageManager: { type: 'simple-storage', autoload: false, autosave: false },
    // https://github.com/artf/grapesjs/blob/master/src/editor/config/config.js
    styleManager: styleManagerCfg,
    container: '#gjs',
    fromElement: true,

    canvas: {
      scripts: [
        'https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js',
      ],
      styles: [
        '/static/grapesjs-canvas.css',
        '/static/css/style.css',
      ],
    },

    plugins: ['gjs-preset-webpage', editCss(), editHtml(), tablePlugin(), azPlugin({
      withCategory: true,
    })],
    pluginsOpts: {
      'gjs-preset-webpage': {
        customStyleManager: [{
          name: 'X',
          open: false,
          buildProps: ['my-custom-prop'],
        }],
      },
    },
  });

  // Here our `simple-storage` implementation
  const SimpleStorage = {};
  editor.StorageManager.add('simple-storage', {
    /**
     * Load the data
     * @param  {Array} keys Array containing values to load, eg, ['gjs-components', 'gjs-styles', ...]
     * @param  {Function} clb Callback function to call when the load is ended
     * @param  {Function} clbErr Callback function to call in case of errors
     */
    load(keys, clb, clbErr) {
      const result = {};

      keys.forEach(key => {
        // const value = SimpleStorage[key];
        const value = localStorage.getItem(key);
        if (value) {
          result[key] = JSON.parse(value);
        }
      });

      // Might be called inside some async method
      clb(result);
    },

    /**
     * Store the data
     * @param  {Object} data Data object to store
     * @param  {Function} clb Callback function to call when the load is ended
     * @param  {Function} clbErr Callback function to call in case of errors
     */
    store(data, clb, clbErr) {
      for (let key in data) {
        // SimpleStorage[key] = data[key];

        localStorage.setItem(key, JSON.stringify(data[key]));
      }
      // Might be called inside some async method
      clb();
    }
  });

  // Add the button
  editor.Panels.addButton('options', [{ 
    id: 'save-db', 
    className: 'fa fa-save', 
    command: 'save-db',
    attributes: {title: 'Save'} 
  }]);

  // Add the command
  editor.Commands.add('save-db', {
    run: function(editor, sender) {
      sender && sender.set('active', 0); // turn off the button
      editor.store();
    }
  });

  // Add the button
  editor.Panels.addButton('options', [{ 
    id: 'load-db', 
    className: 'fa fa-folder-open', 
    command: 'load-db',
    attributes: {title: 'Load'} 
  }]);

  // Add the command
  editor.Commands.add('load-db', {
    run: function(editor, sender) {
      sender && sender.set('active', 0); // turn off the button
      editor.load();
    }
  });

  editor.Panels.removeButton('options', 'gjs-open-import-webpage');
  // editor.Panels.removeButton('options', cmdClear);
</script>